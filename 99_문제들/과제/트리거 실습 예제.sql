--트리거 실습 예제

--1. 성적테이블(학번, 이름, 국, 영, 수), 학점테이블(학번, 총점수, 평균, 등수) 만들기
--성적테이블 : TB_SCORE
--학점테이블 : TB_GRADE

CREATE TABLE TB_SCORE (
    STUDENT_ID NUMBER PRIMARY KEY,
    NAME VARCHAR2(50),
    KOR NUMBER,
    ENG NUMBER,
    MATH NUMBER
);

CREATE TABLE TB_GRADE (
    STUDENT_ID NUMBER PRIMARY KEY,
    TOTAL_SCORE NUMBER,
    AVG_SCORE NUMBER,
    RANKING NUMBER
);


--2. 성적테이블에 INSERT 발생하면 자동으로 학점테이블에 INSERT해주는 트리거 생성
CREATE OR REPLACE TRIGGER TRG_INSERT_GRADE
AFTER INSERT ON TB_SCORE
FOR EACH ROW
BEGIN
    INSERT INTO TB_GRADE (STUDENT_ID, TOTAL_SCORE, AVG_SCORE)
    VALUES (
        :NEW.STUDENT_ID,
        :NEW.KOR + :NEW.ENG + :NEW.MATH,
        (:NEW.KOR + :NEW.ENG + :NEW.MATH) / 3
    );
END;
/



--3. 성적테이블이 UPDATE되면 해당 국어, 영어, 수학 점수의 값이 오라클 콘솔에 출력되는 트리거 생성
CREATE OR REPLACE TRIGGER TRG_UPDATE_SCORE
AFTER UPDATE OF KOR, ENG, MATH ON TB_SCORE
FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE('Updated Scores - KOR: ' || :NEW.KOR || ', ENG: ' || :NEW.ENG || ', MATH: ' || :NEW.MATH);
END;
/


--4. 성적테이블에 INSERT/ UPDATE 되면 등수를 매겨서 저장해주는 프로시저 생성(어려움주의)
CREATE OR REPLACE PROCEDURE PROC_UPDATE_RANKING IS
BEGIN
    UPDATE TB_GRADE T
    SET RANKING = (
        SELECT RANK() OVER (ORDER BY TOTAL_SCORE DESC)
        FROM TB_GRADE G
        WHERE G.STUDENT_ID = T.STUDENT_ID
    );
END;
/


--5. 점수 테이블에 학생 데이터가 삭제되면 학점 테이블에도 학생 데이터 삭제 + 나머지 사람 등수 매기는 트리거 생성
CREATE OR REPLACE TRIGGER TRG_DELETE_SCORE
AFTER DELETE ON TB_SCORE
FOR EACH ROW
BEGIN
    DELETE FROM TB_GRADE WHERE STUDENT_ID = :OLD.STUDENT_ID;
    -- 등수 업데이트 프로시저 호출
    PROC_UPDATE_RANKING;
END;
/


--트리거명 맘대로~

-- 1. 데이터 삽입
INSERT INTO TB_SCORE (STUDENT_ID, NAME, KOR, ENG, MATH) VALUES (1, 'John Doe', 90, 85, 80);
INSERT INTO TB_SCORE (STUDENT_ID, NAME, KOR, ENG, MATH) VALUES (2, 'Jane Smith', 95, 80, 85);

-- 2. 데이터 업데이트
UPDATE TB_SCORE SET KOR = 88, ENG = 90, MATH = 84 WHERE STUDENT_ID = 1;

-- 3. 데이터 삭제
DELETE FROM TB_SCORE WHERE STUDENT_ID = 1;

-- 4. 등수 확인 (수동으로 실행)
EXEC PROC_UPDATE_RANKING;

-- 5. 확인
SELECT * FROM TB_SCORE;
SELECT * FROM TB_GRADE;
